# Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом.
# Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх одной
# и той же стороной. Выведите минимальное количество монет, которые нужно перевернуть

# from random import randint

# n = int(input('Введите количество монет: '))
# index = 0
# heads = tails = 0

# while index < n:
#     coin = randint(0, 1)
#     if coin == 1:
#         heads += 1
#     else:
#         tails += 1
#     print(coin, end = ' ')
#     index += 1

# if tails < heads:
#     print(f'Количество монет, которые нужно перевернуть - {tails}')
# elif heads < tails:
#     print(f'Количество монет, которые нужно перевернуть - {heads}')
# else:
#     print(f'Количество монет, которые нужно перевернуть - {tails}')

# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике.
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для этого Петя делает две подсказки.
# Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.

from math import sqrt

S = int(input('Введите сумму чисел: '))
P = int(input('Введите произведение чисел: '))
x1 = x2 = 0

if S <= 2000 and P <= 1000000:
    # x + y = S     x = S - y   
    # x * y = P      (S - y) * y = P    S*y - y*y = P   y*y - S*y + P = 0
    if S*S - 4*P > 0:
        x1 = int((S + sqrt(S*S - 4*P)) / 2)
        x2 = int((S - sqrt(S*S - 4*P)) / 2)
        if x1 + x2 == S and x1 * x2 == P:
            print(f'{x1}, {x2}')
        else:
            print('Введите корректные сумму и произведение')
    elif S*S - 4*P < 0:
        print('Дискриминант не может быть меньше нуля!')
else:
    print('Введите числа, сумма которых меньше 2000, а произведение - меньше 1000000')

# Задача 14: Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.

# N = int(input('Введите число N: '))
# i = 1

# while 2**i < N:
#     print(2**i, end = ' ')
#     i += 1